package com.tmuhittin.denemee_sikayet;

import java.util.ArrayList;
import java.util.List;
 
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
 
public class DBHelper extends SQLiteOpenHelper {
    // All Static variables
    // Database Version
    private static final int DATABASE_VERSION = 1;
 
    // Database Name
    private static final String DATABASE_NAME = "E_SIKAYET";
 
    // Contacts table name
    private static final String TABLE_NAME = "SIKAYETLER";
 
    // Contacts Table Columns names
    private static final String KEY_ID = "id";
    private static final String KEY_ADSOYAD = "adsoyad";
    private static final String KEY_EMAIL = "email";
    private static final String KEY_ICERIK = "icerik";
   // private static final String[] COLUMNS = {KEY_ID,KEY_ADSOYAD,KEY_EMAIL,KEY_ICERIK};
    public DBHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }
 
    // Creating Tables
    @Override
    public void onCreate(SQLiteDatabase db) {
    	String CREATE_SIKAYETLER_TABLE = "CREATE TABLE SIKAYETLER ( " +
                "id INTEGER PRIMARY KEY AUTOINCREMENT, " + 
                "adsoyad TEXT, "+
                "email TEXT, "+
                "icerik TEXT )";
    	db.execSQL(CREATE_SIKAYETLER_TABLE);
    }
 
    // Upgrading database
    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        // Drop older table if existed
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
 
        // Create tables again
        this.onCreate(db);
    }
 
    /**
     * All CRUD(Create, Read, Update, Delete) Operations
     */
 
    public void addSikayet(Sikayet sikayet) {
        SQLiteDatabase db = this.getWritableDatabase();
 
        ContentValues values = new ContentValues();
        values.put(KEY_ADSOYAD, sikayet.getAdSoyad());
        values.put(KEY_EMAIL, sikayet.getEmail());
        values.put(KEY_ICERIK, sikayet.getIcerik()); 
 
        // Inserting Row
        db.insert(TABLE_NAME, null, values);
        db.close(); // Closing database connection
    }
 

    Sikayet getSikayet(int id) {
        SQLiteDatabase db = this.getReadableDatabase();
 
        Cursor cursor = db.query(TABLE_NAME, new String[] { KEY_ID,
                KEY_ADSOYAD, KEY_EMAIL, KEY_ICERIK }, KEY_ID + "=?",
                new String[] { String.valueOf(id) }, null, null, null, null);
        if (cursor != null)
            cursor.moveToFirst();
 
        Sikayet sikayet = new Sikayet(Integer.parseInt(cursor.getString(0)),
                cursor.getString(1), cursor.getString(2), cursor.getString(3));
        // return contact
        return sikayet;
    }
     

    public List<Sikayet> getAllSikayet() {
        List<Sikayet> sikayetList = new ArrayList<Sikayet>();
        // Select All Query
        String selectQuery = "SELECT  * FROM " + TABLE_NAME;
 
        SQLiteDatabase db = this.getWritableDatabase();
        Cursor cursor = db.rawQuery(selectQuery, null);
 
        // looping through all rows and adding to list
        if (cursor.moveToFirst()) {
            do {
                Sikayet sikayet = new Sikayet();
                sikayet.setID(Integer.parseInt(cursor.getString(0)));
                sikayet.setAdSoyad(cursor.getString(1));
                sikayet.setEmail(cursor.getString(2));
                sikayet.setIcerik(cursor.getString(3));
                // Adding contact to list
                sikayetList.add(sikayet);
            } while (cursor.moveToNext());
        }
 
        // return contact list
        return sikayetList;
    }
 

    public int updateSikayet(Sikayet sikayet) {
        SQLiteDatabase db = this.getWritableDatabase();
 
        ContentValues values = new ContentValues();
        values.put(KEY_ADSOYAD, sikayet.getAdSoyad());
        values.put(KEY_EMAIL, sikayet.getEmail());
        values.put(KEY_ICERIK, sikayet.getIcerik());
 
        // updating row
        return db.update(TABLE_NAME, values, KEY_ID + " = ?",
                new String[] { String.valueOf(sikayet.getID()) });
    }
 

    public void deleteSikayet(Sikayet sikayet) {
        SQLiteDatabase db = this.getWritableDatabase();
        db.delete(TABLE_NAME, KEY_ID + " = ?",
                new String[] { String.valueOf(sikayet.getID()) });
        db.close();
    }
 
 

    public int getSikayetCount() {
        String countQuery = "SELECT  * FROM " + TABLE_NAME;
        SQLiteDatabase db = this.getReadableDatabase();
        Cursor cursor = db.rawQuery(countQuery, null);
        cursor.close();
 

        return cursor.getCount();
    }
 
}

package com.tmuhittin.denemee_sikayet;

public class Sikayet {
	//private variables
    int _id;
    String _adsoyad;
    String _email;
    String _icerik;
     

    public Sikayet(){
         
    }

    public Sikayet(int id, String adsoyad, String email, String icerik){
        this._id = id;
        this._adsoyad = adsoyad;
        this._email = email;
        this._icerik = icerik;
    }
     

    public Sikayet(String adsoyad, String email, String icerik){
        this._adsoyad = adsoyad;
        this._email = email;
        this._icerik = icerik;
    }

    public int getID(){
        return this._id;
    }
     
 
    public void setID(int id){
        this._id = id;
    }
     

    public String getAdSoyad(){
        return this._adsoyad;
    }
     
  
    public void setAdSoyad(String adsoyad){
        this._adsoyad = adsoyad;
    }
     

    public String getEmail(){
        return this._email;
    }
     
 
    public void setEmail(String email){
        this._email = email;
    }
    
    public String getIcerik(){
        return this._icerik;
    }
     
 
    public void setIcerik(String icerik){
        this._icerik = icerik;
    }
}
